// Code generated by truss. DO NOT EDIT.
// Rerunning truss will overwrite this file.
// Version: ab5a6c03d7
// Version Date: 2023-06-04T17:09:20Z

package middlewares

import (
	"context"
	"errors"

	"github.com/go-kit/kit/endpoint"
	"github.com/juju/ratelimit"
	"golang.org/x/time/rate"
)

// Ratelimiter

var ErrLimitExceed = errors.New("rate limit exceed")

// TokenBucketLimitterWithJuju 使用juju
func TokenBucketLimitterWithJuju(bkt *ratelimit.Bucket) endpoint.Middleware {
	return func(next endpoint.Endpoint) endpoint.Endpoint {
		return func(ctx context.Context, request interface{}) (response interface{}, err error) {
			if bkt.TakeAvailable(1) == 0 {
				return nil, ErrLimitExceed
			}
			return next(ctx, request)
		}
	}
}

// TokenBucketLimitterWithBuildIn 使用 x/time/rate
func TokenBucketLimitterWithBuildIn(bkt *rate.Limiter) endpoint.Middleware {
	return func(next endpoint.Endpoint) endpoint.Endpoint {
		return func(ctx context.Context, request interface{}) (response interface{}, err error) {
			if !bkt.Allow() {
				return nil, ErrLimitExceed
			}
			return next(ctx, request)
		}
	}
}
